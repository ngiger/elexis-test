h1. Elexis Test

Dies ist ein kleines Ruby-On-Rails Programm, welches das Testen von Elexis Versionen vereinfachen soll.

h2. Ziele

Ziele für eine erste Version sind:

* admin: Plug-Ins (Name, Beschreibung)
** erstellen
** bearbeiten
** löschen

* Testbeschreibe erstellen
** solange höchstens ein Testresultat zugeordnet
*** verändern
*** löschen

* admin: Versionen erstellen
** plugin zu Versionen hinzufügen

* admin: Testplan erstellen für Version erstellen

* Testresultat erstellen, bearbeiten

Falls zu einem späteren Zeitpunkt (GUI-)Tests automatisiert werden können, solen die Testbeschreibungen Grundlage für das erstellen dieser Tests liefern.

h2. Ursprung

Die Entwicklung wurde von COSRE GmbH, Yverdon gesponsert, damit eine französische Version von Elexis getestet werden kann und damit allen Interessierten (z.B. Anwendern, Entwicklern, Übersetzer) folgende Informationen zugänglich sind:

# Welche Elexis-Version wurde getestet
# Welches Plugin wurde getestet
# Was wurde wie getestet
# Wer hat wann getestet
# Wie beurteilte der Tester das Resultat

h2. Kommt später

* Gesamtübersicht aller Resultat pro Version
* Testresultate pro Plug-In
* Übersetzen, sa. "Rails i18n":http://guides.rubyonrails.org/i18n.html

h2. Ideen

* Mehrere Versionen pro Testbeschreibung (d.h. werden besser/genauer)?
* E-Mail-Adressen vor dem Erfassen des neuen Benutzer verifizieren?
* Adresse/Telefon-Nummer des Testers anzeigen

h1. Entscheidungen

* i18n-Support
* haml
* RedCloth for textile

h1. TODO Release 0.1

TestResultType
ProductVersion muss Liste aller Module bekommen (Relationship?)
* Knopf zum Anhängen aller Module an eine Version erstellen

Script um für alle Module Defaults für TestBeschrieb & TestSteps erstellen
* Einstellungen müssen in Ordnung sein
* Hauptfunktionen des Module beschreiben & testen
* Drucken? Falls sinnvoll, ist es okay
* Gibt es selten gemachte, aber wichtige Arbeiten (wie monatlicher Rechnungsdruck, Jahresabschluss. Wenn ja, sind sie in Ordnung

TestPlan (aka Testsuite) für Version erstellen
* Geht über alle zugehörigen Module, deren TestCases und TestStep


h1. TODO for Release 0.2
ProductVersion 
* Knopf zum (Klonen aller Module & Testbeschriebe)

TestSteps
* Anhängen von Screenshots

TestAufwand
* TestLog (Wer, wiviele Minuten, welche Tabelle, welchen Record bearbeitet
* Auswertung pro Benutzer
* Auf Einstiegsseite die besten 5 anzeigen

Testplan auswerten
* Übersicht
** %-Zahl getesteter Module
** %-Zahl getesteter Test-Cases
** %-Zahl getesteter Test-Steps
** Jeweils auch % pro TestResultType

StyleSheets:
* Testplan, etc mit kleiner Schrift & grösseren Sachen

Auswahl für lange Listen realisieren

h1. TODO for Release 0.3

* Implizite Geschichte der TestBeschreibungen,
** TestCase/TestStep bearbeitet auch Vorlage
** Beim Abschluss des Tests wird der Inhalt in die Vorlage kopiert
   (Was, wenn mehrere Benuzter, mehrere Versionen in der Arbeit sind??) 
   
